/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Parent;

import Main.Callback;
import Main.WebsocketClient;
import com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringStack;
import java.awt.Graphics;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Patryk
 */
public class ActivityLog extends javax.swing.JPanel
{
    WebsocketClient _client;
    /**
     * Creates new form ActivityLog
     */
    public ActivityLog()
    {
        initComponents();
        try{
        _client = WebsocketClient.getInstace();
        initializeWebsiteLog();
        initializeProgramLog();
        }
        catch (Exception ex)
        {
            Logger.getLogger(EditWhitelist.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void initializeWebsiteLog() throws Exception
    {
        
        DefaultTableModel WebsiteLogModel = new DefaultTableModel(new String[]{"Websites", "Run-Time"}, 0){
             @Override
            public boolean isCellEditable(int i, int j) {
                return false;
            }
        };
        _client.RequestWebsitesVisited(new Callback()
        {
            @Override
            public void call(String[] params)
            {
                for(String s : params)
                {
                    if(s.contains("DONOTDELETE"))
                        continue;
                    try {
                        _client.RequestWebsiteTimeSpent(s, new Callback()
                        {
                            @Override
                            public void call(String[] innerparams)
                            {
                                
                                WebsiteLogModel.addRow(new String[] { s, seconds2HMS(innerparams[0]) } );
                            }
                        });
                    }
                    catch (Exception ex) {
                        Logger.getLogger(EditWhitelist.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
                jTableWebsiteLog.setModel(WebsiteLogModel);
                revalidate();
                repaint();
            }
        });
    }
    
    void initializeProgramLog() throws Exception
    {
        
        DefaultTableModel ProgramLogModel = new DefaultTableModel(new String[]{"Applications", "Run-Time"}, 0){
             @Override
            public boolean isCellEditable(int i, int j) {
                return false;
            }
        };
        _client.RequestProgramsUsed(new Callback()
        {
            @Override
            public void call(String[] params)
            {
                for(String s : params)
                {
                    if(s.contains("DONOTDELETE"))
                        continue;
                    try {
                        _client.RequestProgramTimeSpent(s, new Callback()
                        {
                            @Override
                            public void call(String[] innerparams)
                            {
                                
                                ProgramLogModel.addRow(new String[] { s, seconds2HMS(innerparams[0]) } );
                            }
                        });
                    }
                    catch (Exception ex) {
                        Logger.getLogger(EditWhitelist.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
                jTableApplicationLog.setModel(ProgramLogModel);
                revalidate();
                repaint();
            }
        });
    }
    
    String seconds2HMS(String sseconds)
    {
        int seconds = Integer.parseInt(sseconds.split("\\.")[0]);
        int minutes = seconds/60;
        seconds %= 60;
        int hours = minutes/60;
        minutes %= 60;
        return hours + ":" + (minutes < 10 ? ("0" + minutes) : minutes) + ":" + (seconds < 10 ? ("0" + seconds) : seconds);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableApplicationLog = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableWebsiteLog = new javax.swing.JTable();

        jTableApplicationLog.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableApplicationLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String []
            {
                "Application", "Run-time"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableApplicationLog);

        jTableWebsiteLog.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableWebsiteLog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String []
            {
                "Websites", "Run-time"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableWebsiteLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableApplicationLog;
    private javax.swing.JTable jTableWebsiteLog;
    // End of variables declaration//GEN-END:variables
}
